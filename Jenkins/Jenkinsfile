pipeline {
    agent none
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:2-alpine'
                }
            }
            steps {
                echo 'running build stage'
                sh 'python -m py_compile agileStyle.py'
            }
        }
        //NEED TO ADD UNITTEST FILE 
        stage('Test') {
            agent {
                docker {
                    image 'qnib/pytest'
                }
            }
            steps {
                echo 'running test stage'
               /* sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'*/
            }
           /* post {
                always {
                    junit 'test-reports/results.xml'
                }*/
            }
        }
        
        stage('Deploy') {
                    agent any
                    
                    }
                    steps {
                        dir(path: env.BUILD_ID) {
                            unstash(name: 'compiled-results')
                            sh "docker run --rm -v ${VOLUME} ${IMAGE} 'pyinstaller -F agileStyle.py'"
                        }
                    }
                    post {
                        success {
                            archiveArtifacts "${env.BUILD_ID}/sources/dist/add2vals"
                            sh "docker run --rm -v ${VOLUME} ${IMAGE} 'rm -rf build dist'"
                        }
                    }
        }
        post{
              success{
                   echo "==pipeline execution successfully==" 
               }
               failure{
                    echo "==pipeline execution failed=="
                }
         }   
    }
}
