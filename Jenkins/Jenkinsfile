pipeline{
    agent none
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:3.5'
                }
            }
            steps {
                echo 'running build stage'
                sh 'python -m py_compile agileStyle.py'
            }
        }

        stage('Test') {
            agent {
                docker {
                    image 'python:3.5'

                }
            }
            steps {
                echo 'running test stage'
                sh 'pip install pytest'
                sh 'pytest --junit-xml test-reports/results.xml agileStyleTest.py'

            }
            post {
                always {
                    junit 'test-reports/results.xml'
                }
            }
        }
        stage('Integration Test') {
                    steps{
                        sh 'mvn -s ../configuration/settings.xml -B clean test'
                    }
                    post{
                        always{
                            junit 'target/surefire-reports/*.xml' 
                        }
                    }       
        }
                    
    }      
    post {
        failure{
                mail to:"yaelal@ac.sce.ac.il,nuransh@ac.sce.ac.il",
                subject: "Failed: Job",
                body: "Failed"
        }
        success{
                mail to:"yaelal@ac.sce.ac.il,nuransh@ac.sce.ac.il",
                subject: "Success: Job",
                body: "Success"
        }
    } 
}
